#include <shell.h>

int main( char input[BUFSIZ],
    char *args[MAX_ARGS],
    char arg[MAX_ARG_LEN],
    int i, j, num_args, status
)
{

    while (1) {
        num_args = 0;

        printf("$ ");
        fgets(input, BUFSIZ, stdin);

        if (input[strlen(input) - 1] == '\n') {
            input[strlen(input) - 1] = '\0';
        }

        i = 0;
        while (input[i] != '\0') {
            j = 0;
            while (input[i] != ' ' && input[i] != '\0') {
                arg[j] = input[i];
                i++;
                j++;
            }
            arg[j] = '\0';
            args[num_args] = strdup(arg);
            num_args++;

            if (input[i] == '\0') {
                break;
            }
            i++;
        }
        args[num_args] = NULL;

        if (num_args == 0) {
            continue;
        }

        if (strcmp(args[0], "exit") == 0) {
            for (i = 0; i < num_args; i++) {
                free(args[i]);
            }
            break;
        }

        pid_t pid = fork();

        if (pid == 0) {
            if (execvp(args[0], args) == -1) {
                perror("Error: ");
            }
            exit(EXIT_FAILURE);
        } else if (pid < 0) {
            perror("Error: ");
        } else {
            waitpid(pid, &status, 0);
        }

        for (i = 0; i < num_args; i++) {
            free(args[i]);
        }
    }
    return 0;
}
